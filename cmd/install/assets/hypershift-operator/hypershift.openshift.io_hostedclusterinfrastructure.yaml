---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: hostedclusterinfrastructure.hypershift.openshift.io
spec:
  group: hypershift.openshift.io
  names:
    kind: HostedClusterInfrastructure
    listKind: HostedClusterInfrastructureList
    plural: hostedclusterinfrastructure
    shortNames:
    - hci
    - hcis
    singular: hostedclusterinfrastructure
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Infrastructure type
      jsonPath: .spec.platform.type
      name: TYPE
      type: string
    - description: Reason
      jsonPath: .status.conditions[?(@.type=="PlatformInfrastructureConfigured")].reason
      name: INFRA
      type: string
    - description: Reason
      jsonPath: .status.conditions[?(@.type=="PlatformIAMConfigured")].reason
      name: IAM
      type: string
    - description: Reason
      jsonPath: .status.conditions[?(@.type=="ProviderSecretConfigured")].reason
      name: PROVIDER REF
      type: string
    - description: current phase
      jsonPath: .status.phase
      name: PHASE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HostedClusterInfrastructure is the primary representation of
          a HyperShift cluster's infrastructure. It encapsulates resource that can
          be created orthogonal to the control plane. Creating a HostedClusterInfrastructure
          results in a set of provider resources that can be consumed by HostedCluster
          (hypershift-operator). This is not required for HostedCluster, but allows
          required infrastructure to be managed and staged, independent of HostClusters
          and NodePools
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the desired behavior of the HostedCluster.
            properties:
              altInfraID:
                description: AltInfraID is a globally unique identifier for the cluster.
                  This identifier will be used to associate various cloud resources
                  with the HostedCluster and its associated NodePools. If not specified
                  the metadata.name for this resource is used. When specified, this
                  value is used.
                type: string
              cloudProvider:
                description: CloudProvider secret, contains the Cloud credenetial
                  and Base Domain When not present, we expect all values to populated
                  at create time This can be from the hypershift cli or via a kubectl
                  create.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              dns:
                description: DNS specifies DNS configuration for the cluster.
                properties:
                  baseDomain:
                    description: BaseDomain is the base domain of the cluster.
                    type: string
                  privateZoneID:
                    description: PrivateZoneID is the Hosted Zone ID where all the
                      DNS records that are only available internally to the cluster
                      exist.
                    type: string
                  publicZoneID:
                    description: PublicZoneID is the Hosted Zone ID where all the
                      DNS records that are publicly accessible to the internet exist.
                    type: string
                required:
                - baseDomain
                type: object
              networking:
                description: Networking specifies network configuration for the cluster.
                properties:
                  apiServer:
                    description: APIServer contains advanced network settings for
                      the API server that affect how the APIServer is exposed inside
                      a cluster node.
                    properties:
                      advertiseAddress:
                        description: AdvertiseAddress is the address that nodes will
                          use to talk to the API server. This is an address associated
                          with the loopback adapter of each node. If not specified,
                          172.20.0.1 is used.
                        type: string
                      allowedCIDRBlocks:
                        description: AllowedCIDRBlocks is an allow list of CIDR blocks
                          that can access the APIServer If not specified, traffic
                          is allowed from all addresses. This depends on underlying
                          support by the cloud provider for Service LoadBalancerSourceRanges
                        items:
                          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
                          type: string
                        type: array
                      port:
                        description: Port is the port at which the APIServer is exposed
                          inside a node. Other pods using host networking cannot listen
                          on this port. If not specified, 6443 is used.
                        format: int32
                        type: integer
                    type: object
                  clusterNetwork:
                    description: 'ClusterNetwork is the list of IP address pools for
                      pods. TODO: make this required in the next version of the API'
                    items:
                      description: ClusterNetworkEntry is a single IP address block
                        for pod IP blocks. IP blocks are allocated with size 2^HostSubnetLength.
                      properties:
                        cidr:
                          description: CIDR is the IP block address pool.
                          type: string
                        hostPrefix:
                          description: HostPrefix is the prefix size to allocate to
                            each node from the CIDR. For example, 24 would allocate
                            2^8=256 adresses to each node. If this field is not used
                            by the plugin, it can be left unset.
                          format: int32
                          type: integer
                      required:
                      - cidr
                      type: object
                    type: array
                  machineCIDR:
                    description: Deprecated This field will be removed in the next
                      API release. Use MachineNetwork instead
                    format: cidr
                    type: string
                  machineNetwork:
                    description: 'MachineNetwork is the list of IP address pools for
                      machines. TODO: make this required in the next version of the
                      API'
                    items:
                      description: MachineNetworkEntry is a single IP address block
                        for node IP blocks.
                      properties:
                        cidr:
                          description: CIDR is the IP block address pool for machines
                            within the cluster.
                          type: string
                      required:
                      - cidr
                      type: object
                    type: array
                  networkType:
                    default: OVNKubernetes
                    description: NetworkType specifies the SDN provider used for cluster
                      networking.
                    enum:
                    - OpenShiftSDN
                    - Calico
                    - OVNKubernetes
                    - Other
                    type: string
                  podCIDR:
                    description: Deprecated This field will be removed in the next
                      API release. Use ClusterNetwork instead
                    format: cidr
                    type: string
                  serviceCIDR:
                    description: Deprecated This field will be removed in the next
                      API release. Use ServiceNetwork instead
                    format: cidr
                    type: string
                  serviceNetwork:
                    description: 'ServiceNetwork is the list of IP address pools for
                      services. NOTE: currently only one entry is supported. TODO:
                      make this required in the next version of the API'
                    items:
                      description: ServiceNetworkEntry is a single IP address block
                        for the service network.
                      properties:
                        cidr:
                          description: CIDR is the IP block address pool for services
                            within the cluster.
                          type: string
                      required:
                      - cidr
                      type: object
                    type: array
                required:
                - networkType
                type: object
              platform:
                description: Platform specifies the underlying infrastructure provider
                  for the cluster and is used to configure platform specific behavior.
                properties:
                  aws:
                    description: AWS specifies configuration for clusters running
                      on Amazon Web Services.
                    properties:
                      region:
                        description: Region is the AWS region in which the cluster
                          resides. This configures the OCP control plane cloud integrations,
                          and is used by NodePool to resolve the correct boot AMI
                          for a given release. HostedCluster.spec.platform.aws.region
                        type: string
                      resourceTags:
                        description: ResourceTags is a list of additional tags to
                          apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                          for information on tagging AWS resources. AWS supports a
                          maximum of 50 tags per resource. OpenShift reserves 25 tags
                          for its use, leaving 25 tags available for the user.
                        items:
                          description: AWSResourceTag is a tag to apply to AWS resources
                            created for the cluster.
                          properties:
                            key:
                              description: Key is the key of the tag.
                              maxLength: 128
                              minLength: 1
                              pattern: ^[0-9A-Za-z_.:/=+-@]+$
                              type: string
                            value:
                              description: "Value is the value of the tag. \n Some
                                AWS service do not support empty values. Since tags
                                are added to resources in many services, the length
                                of the tag value must meet the requirements of all
                                services."
                              maxLength: 256
                              minLength: 1
                              pattern: ^[0-9A-Za-z_.:/=+-@]+$
                              type: string
                          required:
                          - key
                          - value
                          type: object
                        maxItems: 25
                        type: array
                      rolesRef:
                        description: RolesRef contains references to various AWS IAM
                          roles required to enable integrations such as OIDC. HostedCluster.spec.platform.aws.rolesRef
                        properties:
                          controlPlaneOperatorARN:
                            description: "ControlPlaneOperatorARN  is an ARN value
                              referencing a role appropriate for the Control Plane
                              Operator. \n The following is an example of a valid
                              policy document: \n { \"Version\": \"2012-10-17\", \"Statement\":
                              [ { \"Effect\": \"Allow\", \"Action\": [ \"ec2:CreateVpcEndpoint\",
                              \"ec2:DescribeVpcEndpoints\", \"ec2:ModifyVpcEndpoint\",
                              \"ec2:DeleteVpcEndpoints\", \"ec2:CreateTags\", \"route53:ListHostedZones\"
                              ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\":
                              [ \"route53:ChangeResourceRecordSets\", \"route53:ListResourceRecordSets\"
                              ], \"Resource\": \"arn:aws:route53:::%s\" } ] }"
                            type: string
                          imageRegistryARN:
                            description: "ImageRegistryARN is an ARN value referencing
                              a role appropriate for the Image Registry Operator.
                              \n The following is an example of a valid policy document:
                              \n { \"Version\": \"2012-10-17\", \"Statement\": [ {
                              \"Effect\": \"Allow\", \"Action\": [ \"s3:CreateBucket\",
                              \"s3:DeleteBucket\", \"s3:PutBucketTagging\", \"s3:GetBucketTagging\",
                              \"s3:PutBucketPublicAccessBlock\", \"s3:GetBucketPublicAccessBlock\",
                              \"s3:PutEncryptionConfiguration\", \"s3:GetEncryptionConfiguration\",
                              \"s3:PutLifecycleConfiguration\", \"s3:GetLifecycleConfiguration\",
                              \"s3:GetBucketLocation\", \"s3:ListBucket\", \"s3:GetObject\",
                              \"s3:PutObject\", \"s3:DeleteObject\", \"s3:ListBucketMultipartUploads\",
                              \"s3:AbortMultipartUpload\", \"s3:ListMultipartUploadParts\"
                              ], \"Resource\": \"*\" } ] }"
                            type: string
                          ingressARN:
                            description: "The referenced role must have a trust relationship
                              that allows it to be assumed via web identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                              Example: { \"Version\": \"2012-10-17\", \"Statement\":
                              [ { \"Effect\": \"Allow\", \"Principal\": { \"Federated\":
                              \"{{ .ProviderARN }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\",
                              \"Condition\": { \"StringEquals\": { \"{{ .ProviderName
                              }}:sub\": {{ .ServiceAccounts }} } } } ] } \n IngressARN
                              is an ARN value referencing a role appropriate for the
                              Ingress Operator. \n The following is an example of
                              a valid policy document: \n { \"Version\": \"2012-10-17\",
                              \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                              [ \"elasticloadbalancing:DescribeLoadBalancers\", \"tag:GetResources\",
                              \"route53:ListHostedZones\" ], \"Resource\": \"*\" },
                              { \"Effect\": \"Allow\", \"Action\": [ \"route53:ChangeResourceRecordSets\"
                              ], \"Resource\": [ \"arn:aws:route53:::PUBLIC_ZONE_ID\",
                              \"arn:aws:route53:::PRIVATE_ZONE_ID\" ] } ] }"
                            type: string
                          kubeCloudControllerARN:
                            description: "KubeCloudControllerARN is an ARN value referencing
                              a role appropriate for the KCM/KCC. \n The following
                              is an example of a valid policy document: \n { \"Version\":
                              \"2012-10-17\", \"Statement\": [ { \"Action\": [ \"ec2:DescribeInstances\",
                              \"ec2:DescribeImages\", \"ec2:DescribeRegions\", \"ec2:DescribeRouteTables\",
                              \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\",
                              \"ec2:DescribeVolumes\", \"ec2:CreateSecurityGroup\",
                              \"ec2:CreateTags\", \"ec2:CreateVolume\", \"ec2:ModifyInstanceAttribute\",
                              \"ec2:ModifyVolume\", \"ec2:AttachVolume\", \"ec2:AuthorizeSecurityGroupIngress\",
                              \"ec2:CreateRoute\", \"ec2:DeleteRoute\", \"ec2:DeleteSecurityGroup\",
                              \"ec2:DeleteVolume\", \"ec2:DetachVolume\", \"ec2:RevokeSecurityGroupIngress\",
                              \"ec2:DescribeVpcs\", \"elasticloadbalancing:AddTags\",
                              \"elasticloadbalancing:AttachLoadBalancerToSubnets\",
                              \"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer\",
                              \"elasticloadbalancing:CreateLoadBalancer\", \"elasticloadbalancing:CreateLoadBalancerPolicy\",
                              \"elasticloadbalancing:CreateLoadBalancerListeners\",
                              \"elasticloadbalancing:ConfigureHealthCheck\", \"elasticloadbalancing:DeleteLoadBalancer\",
                              \"elasticloadbalancing:DeleteLoadBalancerListeners\",
                              \"elasticloadbalancing:DescribeLoadBalancers\", \"elasticloadbalancing:DescribeLoadBalancerAttributes\",
                              \"elasticloadbalancing:DetachLoadBalancerFromSubnets\",
                              \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",
                              \"elasticloadbalancing:ModifyLoadBalancerAttributes\",
                              \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",
                              \"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer\",
                              \"elasticloadbalancing:AddTags\", \"elasticloadbalancing:CreateListener\",
                              \"elasticloadbalancing:CreateTargetGroup\", \"elasticloadbalancing:DeleteListener\",
                              \"elasticloadbalancing:DeleteTargetGroup\", \"elasticloadbalancing:DescribeListeners\",
                              \"elasticloadbalancing:DescribeLoadBalancerPolicies\",
                              \"elasticloadbalancing:DescribeTargetGroups\", \"elasticloadbalancing:DescribeTargetHealth\",
                              \"elasticloadbalancing:ModifyListener\", \"elasticloadbalancing:ModifyTargetGroup\",
                              \"elasticloadbalancing:RegisterTargets\", \"elasticloadbalancing:SetLoadBalancerPoliciesOfListener\",
                              \"iam:CreateServiceLinkedRole\", \"kms:DescribeKey\"
                              ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\" }
                              ] }"
                            type: string
                          networkARN:
                            description: "NetworkARN is an ARN value referencing a
                              role appropriate for the Network Operator. \n The following
                              is an example of a valid policy document: \n { \"Version\":
                              \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\",
                              \"Action\": [ \"ec2:DescribeInstances\", \"ec2:DescribeInstanceStatus\",
                              \"ec2:DescribeInstanceTypes\", \"ec2:UnassignPrivateIpAddresses\",
                              \"ec2:AssignPrivateIpAddresses\", \"ec2:UnassignIpv6Addresses\",
                              \"ec2:AssignIpv6Addresses\", \"ec2:DescribeSubnets\",
                              \"ec2:DescribeNetworkInterfaces\" ], \"Resource\": \"*\"
                              } ] }"
                            type: string
                          nodePoolManagementARN:
                            description: "NodePoolManagementARN is an ARN value referencing
                              a role appropriate for the CAPI Controller. \n The following
                              is an example of a valid policy document: \n { \"Version\":
                              \"2012-10-17\", \"Statement\": [ { \"Action\": [ \"ec2:AllocateAddress\",
                              \"ec2:AssociateRouteTable\", \"ec2:AttachInternetGateway\",
                              \"ec2:AuthorizeSecurityGroupIngress\", \"ec2:CreateInternetGateway\",
                              \"ec2:CreateNatGateway\", \"ec2:CreateRoute\", \"ec2:CreateRouteTable\",
                              \"ec2:CreateSecurityGroup\", \"ec2:CreateSubnet\", \"ec2:CreateTags\",
                              \"ec2:DeleteInternetGateway\", \"ec2:DeleteNatGateway\",
                              \"ec2:DeleteRouteTable\", \"ec2:DeleteSecurityGroup\",
                              \"ec2:DeleteSubnet\", \"ec2:DeleteTags\", \"ec2:DescribeAccountAttributes\",
                              \"ec2:DescribeAddresses\", \"ec2:DescribeAvailabilityZones\",
                              \"ec2:DescribeImages\", \"ec2:DescribeInstances\", \"ec2:DescribeInternetGateways\",
                              \"ec2:DescribeNatGateways\", \"ec2:DescribeNetworkInterfaces\",
                              \"ec2:DescribeNetworkInterfaceAttribute\", \"ec2:DescribeRouteTables\",
                              \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\",
                              \"ec2:DescribeVpcs\", \"ec2:DescribeVpcAttribute\",
                              \"ec2:DescribeVolumes\", \"ec2:DetachInternetGateway\",
                              \"ec2:DisassociateRouteTable\", \"ec2:DisassociateAddress\",
                              \"ec2:ModifyInstanceAttribute\", \"ec2:ModifyNetworkInterfaceAttribute\",
                              \"ec2:ModifySubnetAttribute\", \"ec2:ReleaseAddress\",
                              \"ec2:RevokeSecurityGroupIngress\", \"ec2:RunInstances\",
                              \"ec2:TerminateInstances\", \"tag:GetResources\", \"ec2:CreateLaunchTemplate\",
                              \"ec2:CreateLaunchTemplateVersion\", \"ec2:DescribeLaunchTemplates\",
                              \"ec2:DescribeLaunchTemplateVersions\", \"ec2:DeleteLaunchTemplate\",
                              \"ec2:DeleteLaunchTemplateVersions\" ], \"Resource\":
                              [ \"*\" ], \"Effect\": \"Allow\" }, { \"Condition\":
                              { \"StringLike\": { \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"
                              } }, \"Action\": [ \"iam:CreateServiceLinkedRole\" ],
                              \"Resource\": [ \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"
                              ], \"Effect\": \"Allow\" }, { \"Action\": [ \"iam:PassRole\"
                              ], \"Resource\": [ \"arn:*:iam::*:role/*-worker-role\"
                              ], \"Effect\": \"Allow\" } ] }"
                            type: string
                          storageARN:
                            description: "StorageARN is an ARN value referencing a
                              role appropriate for the Storage Operator. \n The following
                              is an example of a valid policy document: \n { \"Version\":
                              \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\",
                              \"Action\": [ \"ec2:AttachVolume\", \"ec2:CreateSnapshot\",
                              \"ec2:CreateTags\", \"ec2:CreateVolume\", \"ec2:DeleteSnapshot\",
                              \"ec2:DeleteTags\", \"ec2:DeleteVolume\", \"ec2:DescribeInstances\",
                              \"ec2:DescribeSnapshots\", \"ec2:DescribeTags\", \"ec2:DescribeVolumes\",
                              \"ec2:DescribeVolumesModifications\", \"ec2:DetachVolume\",
                              \"ec2:ModifyVolume\" ], \"Resource\": \"*\" } ] }"
                            type: string
                        required:
                        - controlPlaneOperatorARN
                        - imageRegistryARN
                        - ingressARN
                        - kubeCloudControllerARN
                        - networkARN
                        - nodePoolManagementARN
                        - storageARN
                        type: object
                      securityGroups:
                        description: SecurityGroups is an optional set of security
                          groups to associate with node instances. One of more of
                          the security groups can be used with nodePool resources
                          NodePool.spec.platform.aws.securityGroups[]
                        items:
                          description: AWSResourceReference is a reference to a specific
                            AWS resource by ID, ARN, or filters. Only one of ID, ARN
                            or Filters may be specified. Specifying more than one
                            will result in a validation error.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        type: array
                      vpc:
                        description: VPC is the VPC to use for control plane cloud
                          resources. HostedCluster.spec.platform.aws.cloudProviderConfig.vpc
                        type: string
                      zones:
                        description: Zones are availability zones in an AWS region.
                          An AWS subnet is created in each zone. The info is then
                          used to populate HostedCluster.spec.platform.aws.cloudProviderConfig.zone
                          HostedCluster.spec.platform.aws.cloudProviderConfig.subnet
                          NodePool.spec.platform.aws.subnet.id
                        items:
                          properties:
                            subnet:
                              description: Subnet will be created if value is empty
                                in the specified zone
                              properties:
                                arn:
                                  description: ARN of resource
                                  type: string
                                filters:
                                  description: 'Filters is a set of key/value pairs
                                    used to identify a resource They are applied according
                                    to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                  items:
                                    description: Filter is a filter used to identify
                                      an AWS resource
                                    properties:
                                      name:
                                        description: Name of the filter. Filter names
                                          are case-sensitive.
                                        type: string
                                      values:
                                        description: Values includes one or more filter
                                          values. Filter values are case-sensitive.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - name
                                    - values
                                    type: object
                                  type: array
                                id:
                                  description: ID of resource
                                  type: string
                              type: object
                            zone:
                              description: Zone is the availability zone to be used,
                                a subnet will be created if one is not provided. The
                                availability zones must be a memeber of the spec.platform.aws.region
                              type: string
                          required:
                          - zone
                          type: object
                        type: array
                    required:
                    - region
                    type: object
                  azure:
                    description: Azure defines azure specific settings
                    properties:
                      credentials:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      location:
                        type: string
                      machineIdentityID:
                        type: string
                      resourceGroup:
                        type: string
                      securityGroupName:
                        type: string
                      subnetName:
                        type: string
                      subscriptionID:
                        type: string
                      vnetID:
                        type: string
                      vnetName:
                        type: string
                    required:
                    - credentials
                    - location
                    - machineIdentityID
                    - resourceGroup
                    - securityGroupName
                    - subnetName
                    - subscriptionID
                    - vnetID
                    - vnetName
                    type: object
                  powervs:
                    description: PowerVS specifies configuration for clusters running
                      on IBMCloud Power VS Service. This field is immutable. Once
                      set, It can't be changed.
                    properties:
                      accountID:
                        description: AccountID is the IBMCloud account id. This field
                          is immutable. Once set, It can't be changed.
                        type: string
                      cisInstanceCRN:
                        description: CISInstanceCRN is the IBMCloud CIS Service Instance's
                          Cloud Resource Name This field is immutable. Once set, It
                          can't be changed.
                        pattern: '^crn:'
                        type: string
                      controlPlaneOperatorCreds:
                        description: "ControlPlaneOperatorCreds is a reference to
                          a secret containing cloud credentials with permissions matching
                          the control-plane-operator policy. This field is immutable.
                          Once set, It can't be changed. \n TODO(dan): document the
                          \"control plane operator policy\""
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      ingressOperatorCloudCreds:
                        description: IngressOperatorCloudCreds is a reference to a
                          secret containing ibm cloud credentials for ingress operator
                          to get authenticated with ibm cloud.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      kubeCloudControllerCreds:
                        description: "KubeCloudControllerCreds is a reference to a
                          secret containing cloud credentials with permissions matching
                          the cloud controller policy. This field is immutable. Once
                          set, It can't be changed. \n TODO(dan): document the \"cloud
                          controller policy\""
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      nodePoolManagementCreds:
                        description: "NodePoolManagementCreds is a reference to a
                          secret containing cloud credentials with permissions matching
                          the node pool management policy. This field is immutable.
                          Once set, It can't be changed. \n TODO(dan): document the
                          \"node pool management policy\""
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      region:
                        description: Region is the IBMCloud region in which the cluster
                          resides. This configures the OCP control plane cloud integrations,
                          and is used by NodePool to resolve the correct boot image
                          for a given release. This field is immutable. Once set,
                          It can't be changed.
                        type: string
                      resourceGroup:
                        description: ResourceGroup is the IBMCloud Resource Group
                          in which the cluster resides. This field is immutable. Once
                          set, It can't be changed.
                        type: string
                      serviceInstanceID:
                        description: "ServiceInstance is the reference to the Power
                          VS service on which the server instance(VM) will be created.
                          Power VS service is a container for all Power VS instances
                          at a specific geographic region. serviceInstance can be
                          created via IBM Cloud catalog or CLI. ServiceInstanceID
                          is the unique identifier that can be obtained from IBM Cloud
                          UI or IBM Cloud cli. \n More detail about Power VS service
                          instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                          \n This field is immutable. Once set, It can't be changed."
                        type: string
                      subnet:
                        description: Subnet is the subnet to use for control plane
                          cloud resources. This field is immutable. Once set, It can't
                          be changed.
                        properties:
                          id:
                            description: ID of resource
                            type: string
                          name:
                            description: Name of resource
                            type: string
                        type: object
                      vpc:
                        description: VPC specifies IBM Cloud PowerVS Load Balancing
                          configuration for the control plane. This field is immutable.
                          Once set, It can't be changed.
                        properties:
                          name:
                            description: Name for VPC to used for all the service
                              load balancer. This field is immutable. Once set, It
                              can't be changed.
                            type: string
                          region:
                            description: Region is the IBMCloud region in which VPC
                              gets created, this VPC used for all the ingress traffic
                              into the OCP cluster. This field is immutable. Once
                              set, It can't be changed.
                            type: string
                          subnet:
                            description: Subnet is the subnet to use for load balancer.
                              This field is immutable. Once set, It can't be changed.
                            type: string
                          zone:
                            description: Zone is the availability zone where load
                              balancer cloud resources are created. This field is
                              immutable. Once set, It can't be changed.
                            type: string
                        required:
                        - name
                        - region
                        type: object
                      zone:
                        description: Zone is the availability zone where control plane
                          cloud resources are created. This field is immutable. Once
                          set, It can't be changed.
                        type: string
                    required:
                    - accountID
                    - cisInstanceCRN
                    - controlPlaneOperatorCreds
                    - ingressOperatorCloudCreds
                    - kubeCloudControllerCreds
                    - nodePoolManagementCreds
                    - region
                    - resourceGroup
                    - serviceInstanceID
                    - subnet
                    - vpc
                    - zone
                    type: object
                  type:
                    allOf:
                    - enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      - Azure
                      - PowerVS
                    - enum:
                      - AWS
                      - Azure
                      - PowerVS
                    description: Type is the type of infrastructure provider for the
                      cluster.
                    type: string
                required:
                - type
                type: object
            required:
            - dns
            - platform
            type: object
          status:
            description: Status is the latest observed status of the HostedCluster.
            properties:
              conditions:
                description: Track the conditions for each step in the desired curation
                  that is being executed as a job
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                default: init
                description: Show which phase of curation is currently being processed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
